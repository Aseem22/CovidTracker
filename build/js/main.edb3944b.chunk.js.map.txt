{"version":3,"sources":["components/Infobox.js","components/Linegraph.js","components/Table.js","util.js","components/Statewise.js","App.js","index.js"],"names":["Infobox","title","cases","total","active","isRed","props","console","log","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","sortData","sort","b","Statewise","states","setstates","res","statewise","getStatedata","state","confirmed","recovered","deaths","App","setcountries","setcountry","countryInfo","setcountryInfo","tabledata","settabledata","defaultinfo","name","iso2","sorteddata","getCountriesdata","onCountrychange","e","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"qTA+BeA,MAzBf,YAAoE,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAUC,EAAS,0DAEjE,OADAC,QAAQC,IAAIP,EAAOG,GAEjB,cAACK,EAAA,EAAD,CACEC,QAASJ,EAAMI,QACfC,UAAS,kBAAaP,GAAU,oBAAvB,YACPC,GAAS,gBAHb,SAME,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,SACGd,IAEH,oBAAIU,UAAS,0BAAqBN,GAAS,yBAA3C,SACGH,IAGH,eAACW,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAM,gBAA7C,6BACiBX,W,0BCpBnBa,EAAU,CACdC,OAAO,CACHC,SAAQ,GAEZC,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAAUC,EAAaC,GAC5B,OAAOC,IAAQF,EAAYG,OAAOC,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,OACNC,KAAM,CACJJ,OAAQ,WACRK,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTrB,SAAS,GAEXsB,MAAO,CAELC,SAAU,SAAUV,EAAOW,EAAOC,GAChC,OAAOb,IAAQC,GAAOC,OAAO,YAQnCY,EAAiB,SAACf,EAAMgB,GAC5B,IACIC,EADAC,EAAY,GAEhB,IAAK,IAAIC,KAAQnB,EAAK3B,MAAO,CAC3B,GAAI4C,EAAe,CACjB,IAAIG,EAAe,CACjBC,EAAGF,EACHG,EAAGtB,EAAKgB,GAAWG,GAAQF,GAE7BC,EAAUK,KAAKH,GAEjBH,EAAgBjB,EAAKgB,GAAWG,GAElC,OAAOD,GA2CMM,MAxCf,YAA2C,IAAD,IAArBR,iBAAqB,MAAX,QAAW,EACxC,EAAwBS,mBAAS,IAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KAmBA,OAjBAC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,sEACVC,MAAM,8DACTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAC9B,GACL,IAAIkB,EAAYH,EAAef,EAAMgB,GACrCU,EAAQR,GACRxC,QAAQC,IAAIuC,MARA,2CAAH,qDAafe,KACC,CAACjB,IAGF,+BACO,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,QAAS,GACd,cAAC,IAAD,CACElC,KAAM,CACJmC,SAAU,CACR,CACEC,gBAAiB,yBACjBC,YAAa,UACbrC,KAAMA,KAIZb,QAASA,OC/EJmD,EAhBD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACZ,OACI,qBAAKzD,UAAU,QAAf,SACIyD,EAAUC,KAAI,SAACC,GAAD,OACd,+BACI,6BAAKA,EAAQA,UACb,6BAAKA,EAAQpE,iB,QCThBqE,EAAU,SAAC1C,GAExB,OADiB,YAAIA,GACH2C,MAAK,SAACf,EAAEgB,GAAH,OAAShB,EAAEvD,MAAMuE,EAAEvE,OAAU,EAAK,MCoC1CwE,EApCG,WAEd,MAAyBpB,mBAAS,IAAlC,mBAAOqB,EAAP,KAAcC,EAAd,KAaA,OAZApB,qBAAU,YACY,uCAAG,8BAAAC,EAAA,sEACDC,MAAM,2EADL,cACXmB,EADW,gBAECA,EAAIhB,OAFL,OAEXhC,EAFW,OAGjBtB,QAAQC,IAAIqB,EAAKA,KAAKiD,UAAU,IAChCF,EAAU/C,EAAKA,KAAKiD,WAJH,2CAAH,qDAMlBC,KAEF,IAIE,qBAAKpE,UAAU,QAAf,SAEGgE,EAAON,KAAI,SAACW,GAAD,OACV,+BACI,oBAAIrE,UAAU,cAAd,SAA6BqE,EAAMA,QACnC,oBAAIrE,UAAU,cAAd,SAA6BqE,EAAMC,YACnC,oBAAItE,UAAU,cAAd,SAA6BqE,EAAME,YACnC,oBAAIvE,UAAU,cAAd,SAA6BqE,EAAMG,kBC8HpCC,MArIf,WACC,MAA+B9B,mBAAS,IAAxC,mBAAOc,EAAP,KAAiBiB,EAAjB,KACA,EAA2B/B,mBAAS,aAApC,mBAAOgB,EAAP,KAAegB,EAAf,KACA,EAAmChC,mBAAS,IAA5C,mBAAOiC,EAAP,KAAmBC,EAAnB,KACA,EAA+BlC,mBAAS,IAAxC,mBAAOmC,EAAP,KAAiBC,EAAjB,KACA,EAAkCpC,mBAAS,SAA3C,mBAAOT,EAAP,UAMDW,qBAAW,YACQ,uCAAG,8BAAAC,EAAA,sEACJC,MAAM,sCADF,cACdmB,EADc,gBAEHA,EAAIhB,OAFD,OAEdhC,EAFc,OAGpB2D,EAAe3D,GAHK,2CAAH,qDAKjB8D,KACA,IAIDnC,qBAAU,YACc,uCAAG,kCAAAC,EAAA,+EAETC,MAAM,4CAFG,cAEnBmB,EAFmB,gBAGNA,EAAIhB,OAHE,QAGjBhC,EAHiB,SAOtBtB,QAAQC,IAAIqB,GACLuC,EAAWvC,EAAKwC,KAAI,SAACC,GAAD,MAAY,CACpCsB,KAAMtB,EAAQA,QACdvC,MAAMuC,EAAQiB,YAAYM,SAItBC,EAAYvB,EAAS1C,GAC3B6D,EAAaI,GAGdT,EAAajB,IAbd7D,QAAQC,IAAI,8BALW,kDAuBxBD,QAAQC,IAAR,MAvBwB,0DAAH,qDA2BvBuF,KAEE,IAKH,IAAMC,EAAe,uCAAC,WAAMC,GAAN,qBAAAxC,EAAA,6DACfyC,EAAcD,EAAEE,OAAOpE,MAC7BxB,QAAQC,IAAI0F,GACNE,EAAmB,cAAdF,EAA0B,+CAA1B,mDAAqHA,GAH3G,SAILxC,MAAM0C,GAJD,cAIfvB,EAJe,gBAKJA,EAAIhB,OALA,OAKfhC,EALe,OAMrByD,EAAWY,GACXV,EAAe3D,GAPM,4CAAD,sDAYpB,OACC,sBAAKlB,UAAU,MAAf,UACC,sBAAKA,UAAU,WAAf,UACC,sBAAKA,UAAU,aAAf,UACA,qBAAKA,UAAU,mBAAf,SACC,oDAEF,cAAC0F,EAAA,EAAD,CAAa1F,UAAU,sBAAvB,SACC,eAAC2F,EAAA,EAAD,CAAQC,QAAQ,WAAYC,SAAUR,EAAiBjE,MAAOuC,EAA9D,UACA,cAACmC,EAAA,EAAD,CAAU1E,MAAOuC,EAAjB,uBACIF,EAAUC,KAAI,SAACC,GAAD,OACb,cAACmC,EAAA,EAAD,CAAU1E,MAAOuC,EAAQvC,MAAzB,SAAiCuC,EAAQsB,kBAKhD,sBAAKjF,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SACF,cAAC,EAAD,CAASV,MAAM,oBAAoBC,MAAOqF,EAAYrF,MAAOC,MAAOoF,EAAYmB,eAEhF,qBAAK/F,UAAU,eAAf,SACA,cAAC,EAAD,CAASV,MAAM,YAAYC,MAAOqF,EAAYL,UAAW/E,MAAOoF,EAAYoB,mBAE5E,qBAAKhG,UAAU,eAAf,SACA,cAAC,EAAD,CAASV,MAAM,uBAAuBC,MAAOqF,EAAYJ,OAAQhF,MAAOoF,EAAYqB,mBAGpF,sBAAKjG,UAAU,WAAf,UACA,oBAAIA,UAAU,kBAAd,sCACA,qBAAKA,UAAU,QAAf,SACA,+BACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,uBACA,oBAAIA,UAAU,cAAd,yBAGA,qBAAKA,UAAU,YAAf,SACA,cAAC,EAAD,YAOC,qBAAKA,UAAU,YAAf,SACA,cAACF,EAAA,EAAD,UACK,eAACG,EAAA,EAAD,WAEE,qBAAID,UAAU,mBAAd,2BAAgDkC,KAC/C,cAAC,EAAD,CAAWA,UAAWA,IACtB,oBAAIlC,UAAU,eAAd,sCACD,cAAC,EAAD,CAAOyD,UAAWqB,eCrI7BoB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.edb3944b.chunk.js","sourcesContent":["\r\n  \r\nimport React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\n\r\nfunction Infobox({ title, cases, total, active, isRed, ...props }) {\r\n  console.log(title, active);\r\n  return (\r\n    <Card \r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n        Today's Update: {total}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend:{\r\n      display:true\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType=\"cases\" }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          //buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React,{ useEffect,useState} from 'react'\r\n\r\n\r\nconst Table = ({countries}) => {\r\n    return (\r\n        <div className=\"table\">\r\n           {countries.map((country) =>(\r\n            <tr>\r\n                <td>{country.country}</td>\r\n                <td>{country.cases}</td>\r\n            </tr>\r\n\r\n           ))}\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export const sortData= (data) => {\r\nconst sorteddata=[...data];\r\nreturn sorteddata.sort((a,b) =>(a.cases>b.cases ? (-1): (1)))\r\n \r\n}","import React ,{useEffect,useState}from 'react';\r\n\r\nconst Statewise = () => {\r\n   \r\n    const [states,setstates]=useState([]);\r\n    useEffect(() => {\r\n        const getStatedata = async () =>{\r\n            const res=await fetch(\"https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise\");\r\n            const data= await res.json();\r\n            console.log(data.data.statewise[0]);\r\n            setstates(data.data.statewise);\r\n        }\r\n        getStatedata();\r\n\r\n    },[])\r\n \r\n    \r\n    return (\r\n        <div className=\"state\">\r\n          \r\n          {states.map((state) =>(\r\n            <tr>\r\n                <td className=\"state_state\">{state.state}</td>\r\n                <td className=\"state_state\">{state.confirmed}</td>\r\n                <td className=\"state_state\">{state.recovered}</td>\r\n                <td className=\"state_state\">{state.deaths}</td>\r\n            </tr>\r\n\r\n           ))}\r\n           \r\n           \r\n          \r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statewise\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport Infobox from \"./components/Infobox\";\nimport LineGraph from \"./components/Linegraph\";\nimport Table from \"./components/Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./components/Map\";\nimport Statewise from \"./components/Statewise\"\n\n\nfunction App() {\n const [countries,setcountries]=useState([]);\n const [country,setcountry]=useState(\"Worldwide\");\n const [countryInfo,setcountryInfo]=useState([]);\n const [tabledata,settabledata]=useState([])\n const [casesType, setCasesType] = useState(\"cases\");\n\n//console.log(country);\n\n\n//By default,it wii have worldwide cases on the UI//\nuseEffect( ()=>{\n  const defaultinfo = async()=>{\n    let res=await fetch(\"https://disease.sh/v3/covid-19/all\");\n  const data=await res.json();\n  setcountryInfo(data);\n  }\n  defaultinfo();\n},[])\n//here,we end//\n\n//here,we pull out the request from the api as app compoenet loads//\n useEffect(() => {\n   const getCountriesdata = async () =>{\n     try{\n     let res=await fetch(\"https://disease.sh/v3/covid-19/countries\");\n     const data=await res.json();\n     if(!data) \n     console.log(\"data not received from api\");\n     else{\n      console.log(data);\n       const countries= data.map((country)=>({\n         name: country.country,\n         value:country.countryInfo.iso2,\n       })\n       )\n      \n       const sorteddata= sortData(data);\n       settabledata(sorteddata);\n       //console.log(sorteddata);\n      \n      setcountries(countries);\n     }\n     \n  }\n  catch(err){\n    console.log(err)\n}\n   \n  }\n  getCountriesdata();\n   \n }, [])\n //here,we end//\n\n\n//here,on changing the country name in dropdown,we are pulling its countrycode and its respective data//\n const onCountrychange=async(e)=>{\n  const countryCode = e.target.value;\n  console.log(countryCode);\n  const url= countryCode===\"Worldwide\"?\"https://disease.sh/v3/covid-19/countries/all\":`https://disease.sh/v3/covid-19/countries/${countryCode}` \n  const res=await fetch(url);\n  const data=await res.json();\n  setcountry(countryCode);//storing the code of each country ,we can pass it any time\n  setcountryInfo(data);\n  //console.log(\"countryinfo>>>>\", countryInfo);\n}\n//here we end//\n\n  return (\n   <div className=\"app\">\n    <div className=\"app_left\">\n     <div className=\"app_header\">\n     <div className=\"app_header_title\">\n      <h1>Covid-19-Tracker</h1>\n     </div>\n    <FormControl className=\"app_header_dropdown\">\n     <Select variant=\"outlined\"  onChange={onCountrychange} value={country}>\n     <MenuItem value={country}>Worldwide</MenuItem>\n        {countries.map((country) => (\n          <MenuItem value={country.value}>{country.name}</MenuItem>\n          ))}\n     </Select>\n    </FormControl> \n   </div>\n   <div className=\"app_stats\">\n     <div className=\"infobox_card\" >\n   <Infobox title=\"CoronaVirus Cases\" cases={countryInfo.cases} total={countryInfo.todayCases} />\n   </div>\n   <div className=\"infobox_card\" >\n   <Infobox title=\"Recovered\" cases={countryInfo.recovered} total={countryInfo.todayRecovered} />\n   </div>\n   <div className=\"infobox_card\" >\n   <Infobox title=\"Deaths till date !!!\" cases={countryInfo.deaths} total={countryInfo.todayDeaths} />\n   </div>\n   </div>\n   <div className=\"statebox\">\n   <h2 className=\"statebox_header\">State-Wise Data of INDIA</h2>\n   <div className=\"state\">\n   <tr >\n   <td className=\"state_state\">State</td>\n   <td className=\"state_state\">Cases</td>\n   <td className=\"state_state\">Recovered</td>\n   <td className=\"state_state\">Deaths</td>\n   </tr>\n   </div>\n   <div className=\"statemenu\">\n   <Statewise />\n   </div>\n   </div>\n   </div>\n\n\n\n    <div className=\"app_right\">\n    <Card>\n         <CardContent> \n\n           <h2 className=\"app_right_header\">Worldwide new {casesType}</h2>\n            <LineGraph casesType={casesType} />\n            <h2 className=\"table_header\"> Live Cases Of Countries</h2>\n           <Table countries={tabledata} />\n           \n          \n        </CardContent>\n        </Card>\n    </div>\n   </div>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}